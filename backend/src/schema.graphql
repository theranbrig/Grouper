# import * from './generated/prisma.graphql'

type SuccessMessage {
  message: String
}

type Mutation {
  signup(username: String!, email: String!, password: String!): User!
  signin(email: String!, password: String!): User!
  signout: SuccessMessage
  createList(name: String!, type: String!): List!
  editList(id: ID!, name: String, type: String): List!
  removeList(id: String!): List
  addUser(email: String!, id: ID!): User!
  addUserByName(username: String!, id: ID!): User!
  removeUser(email: String!, id: ID!): List
  addItem(name: String!, price: Int, list: String!, image: String): ListItem!
  editListItem(id: ID!, name: String, price: Int): ListItem
  removeListItem(id: String!): ListItem
  toggleInCart(id: String!): ListItem
  refreshToken(token: String!): String!
  addFriend(username: String!, friendName: String!): User
  removeFriend(username: String!, friendName: String!): User
  sendFriendRequestById(senderId: String!, receiverId: String!): FriendRequest
  sendFriendRequestByUsername(senderId: String!, receiverUsername: String!): FriendRequest
  removeFriendRequest(id: ID!): FriendRequest
}

type Query {
  me: User
  lists(where: ListWhereInput): [List]!
  list(where: ListWhereInput): List
  listItem(where: ListItemWhereInput): ListItem
}

type Subscription {
  listItems: ListItemSubscriptionPayload
}
